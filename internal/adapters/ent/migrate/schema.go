// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// KindsColumns holds the columns for the "kinds" table.
	KindsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID, Unique: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "name", Type: field.TypeString, Unique: true, Size: 2147483647},
		{Name: "description", Type: field.TypeString, Nullable: true, Size: 2147483647},
		{Name: "status", Type: field.TypeEnum, Enums: []string{"published", "draft"}, Default: "draft"},
	}
	// KindsTable holds the schema information for the "kinds" table.
	KindsTable = &schema.Table{
		Name:       "kinds",
		Columns:    KindsColumns,
		PrimaryKey: []*schema.Column{KindsColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "kind_created_at_id",
				Unique:  false,
				Columns: []*schema.Column{KindsColumns[1], KindsColumns[0]},
			},
		},
	}
	// LaunchesColumns holds the columns for the "launches" table.
	LaunchesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID, Unique: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "status", Type: field.TypeEnum, Enums: []string{"todo", "started", "completed"}, Default: "todo"},
		{Name: "reason", Type: field.TypeString, Size: 2147483647},
		{Name: "description", Type: field.TypeString, Nullable: true, Size: 2147483647},
		{Name: "files", Type: field.TypeJSON, Nullable: true},
		{Name: "applicant", Type: field.TypeString},
		{Name: "kind_launches", Type: field.TypeUUID},
		{Name: "order_launches", Type: field.TypeUUID},
	}
	// LaunchesTable holds the schema information for the "launches" table.
	LaunchesTable = &schema.Table{
		Name:       "launches",
		Columns:    LaunchesColumns,
		PrimaryKey: []*schema.Column{LaunchesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "launches_kinds_launches",
				Columns:    []*schema.Column{LaunchesColumns[8]},
				RefColumns: []*schema.Column{KindsColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "launches_orders_launches",
				Columns:    []*schema.Column{LaunchesColumns[9]},
				RefColumns: []*schema.Column{OrdersColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "launch_created_at_id",
				Unique:  false,
				Columns: []*schema.Column{LaunchesColumns[1], LaunchesColumns[0]},
			},
		},
	}
	// OrdersColumns holds the columns for the "orders" table.
	OrdersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID, Unique: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "name", Type: field.TypeString, Unique: true, Size: 2147483647},
		{Name: "description", Type: field.TypeString, Nullable: true, Size: 2147483647},
		{Name: "status", Type: field.TypeEnum, Enums: []string{"published", "draft"}, Default: "draft"},
	}
	// OrdersTable holds the schema information for the "orders" table.
	OrdersTable = &schema.Table{
		Name:       "orders",
		Columns:    OrdersColumns,
		PrimaryKey: []*schema.Column{OrdersColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "order_created_at_id",
				Unique:  false,
				Columns: []*schema.Column{OrdersColumns[1], OrdersColumns[0]},
			},
		},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		KindsTable,
		LaunchesTable,
		OrdersTable,
	}
)

func init() {
	LaunchesTable.ForeignKeys[0].RefTable = KindsTable
	LaunchesTable.ForeignKeys[1].RefTable = OrdersTable
}
